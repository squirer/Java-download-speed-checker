

So my initial thoughts will go here and hopefully this can shed some light on how my mind works as I go!


-- Downloader

    Initially thinking here that if this app is living on a cloud server, the user pings it a request and in that
    process downloads a file. The file we use will be on the server and transferred to the client. For the duration
    of this process, we time it and then provide a Mb per sec download speed calculation.


-- Difficulties: The challenges i find are that:

    - I can write the download file to the outputstream of the response and time this process - but once its written,
      it seems difficult then to also pass data the download report I have created back to the client. I am
      thinking here that with more time, this would function like so:

      - Frontend - makes a request for speed to be tested
      - Backend, confirms request and writes the download file (timer for this process runs)
      - Frontend then makes a subsequent request for the details
      - Backend provides download report of stats and what happened + Mb/sec speed


- Right now I have a a 'DownloadReportRepository' which is a simple Hashmap of client IP Address -> download report
  this could later be extended for other data storage options. I don't think this application needs a repository,
  but i found it as the closest solution I could get to show the actual download report without having to go to the
  server and tail the logs.

  Ideally there would be a client that with the push of a button it sends one request to do the download and the other
  to check the timings and statistics.



